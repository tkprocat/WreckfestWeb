{
  "permissions": {
    "allow": [
      "WebFetch(domain:localhost)",
      "Bash(composer --version)",
      "Bash(composer create-project:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(composer require:*)",
      "Bash(php artisan filament:install:*)",
      "Bash(php artisan make:filament-user:*)",
      "Bash(composer show)",
      "Bash(php artisan:*)",
      "WebFetch(domain:server.nitrado.net)",
      "WebSearch",
      "WebFetch(domain:wiki.nitrado.net)",
      "WebFetch(domain:gist.github.com)",
      "WebFetch(domain:www.g-portal.com)",
      "Read(//c/Program Files (x86)/Steam/steamapps/common/Wreckfest Dedicated Server/**)",
      "Bash(composer test)",
      "Bash(composer test:*)",
      "Bash(composer:*)",
      "Bash(if [ -f \"bootstrap/cache/livewire-components.php\" ])",
      "Bash(then rm bootstrap/cache/livewire-components.php)",
      "Bash(fi)",
      "Bash(if [ -f \"bootstrap/cache/packages.php\" ])",
      "Bash(then rm bootstrap/cache/packages.php)",
      "Bash(if [ -f \"bootstrap/cache/services.php\" ])",
      "Bash(then rm bootstrap/cache/services.php)",
      "WebFetch(domain:filamentphp.com)",
      "WebFetch(domain:rias.be)",
      "WebFetch(domain:github.com)",
      "Bash(npm run build)",
      "WebFetch(domain:tads.me.uk)",
      "Bash(cat config/wreckfest.php.backup)",
      "Bash(php -l config/wreckfest_new.php)",
      "Bash(php -r \"\n$tracks = include ''config/wreckfest_tracks_new.php'';\n$old = include ''config/wreckfest.php.backup'';\n\n$new = [\n    ''api_url'' => $old[''api_url''],\n    ''brand'' => $old[''brand''],\n    ''tracks'' => $tracks,\n    ''gamemodes'' => $old[''gamemodes''],\n    ''grid_orders'' => $old[''grid_orders''],\n    ''session_modes'' => $old[''session_modes''],\n    ''weather_conditions'' => $old[''weather_conditions''],\n    ''frequencies'' => $old[''frequencies''],\n    ''ai_difficulties'' => $old[''ai_difficulties''],\n    ''vehicle_damages'' => $old[''vehicle_damages''],\n    ''car_classes'' => $old[''car_classes''],\n    ''cars'' => $old[''cars''],\n];\n\nfile_put_contents(''config/wreckfest_new2.php'', ''<?php'' . PHP_EOL . PHP_EOL . ''return '' . var_export($new, true) . '';'' . PHP_EOL);\necho ''Config file created successfully'';\n\")",
      "Bash(php -r \"\n$tracks = include ''config/wreckfest_tracks_final.php'';\nforeach ($tracks as $trackKey => $track) {\n    foreach ($track[''variants''] as $variantId => $variant) {\n        if (str_contains($variant[''name''], ''Demolition Arena'') || \n            str_contains($variant[''name''], ''Field Arena'') ||\n            str_contains($variant[''name''], ''Mud Pit'') ||\n            str_contains($variant[''name''], ''Derby'')) {\n            if (!$variant[''derby_only'']) {\n                echo \"\"$trackKey -> $variantId: {$variant[''name'']} should be derby_only\\n\"\";\n            }\n        }\n    }\n}\n\")",
      "Bash(php -l config/wreckfest_tracks_converted.php)",
      "Bash(php -l config/wreckfest_tracks_final.php)",
      "Bash(php -r \"\n$tracks = include ''config/wreckfest_tracks_final.php'';\n$old = include ''config/wreckfest.php.backup'';\n\n$new = [];\n$new[''api_url''] = $old[''api_url''];\n$new[''brand''] = $old[''brand''];\n$new[''tracks''] = $tracks;\n$new[''gamemodes''] = $old[''gamemodes''];\n$new[''grid_orders''] = $old[''grid_orders''];\n$new[''session_modes''] = $old[''session_modes''];\n$new[''weather_conditions''] = $old[''weather_conditions''];\n$new[''frequencies''] = $old[''frequencies''];\n$new[''ai_difficulties''] = $old[''ai_difficulties''];\n$new[''vehicle_damages''] = $old[''vehicle_damages''];\n$new[''car_classes''] = $old[''car_classes''];\n$new[''cars''] = $old[''cars''];\n\n// Format output nicely\n$output = \"\"<?php\\n\\nreturn [\\n\"\";\n$output .= \"\"    ''api_url'' => env(''WRECKFEST_API_URL'', ''https://localhost:5101/api''),\\n\\n\"\";\n$output .= \"\"    ''brand'' => \"\" . var_export($new[''brand''], true) . \"\",\\n\\n\"\";\n\n// Add tracks from final file\n$tracksContent = file_get_contents(''config/wreckfest_tracks_final.php'');\n$tracksContent = preg_replace(''/^<\\?php\\s*/'', '''', $tracksContent);\n$tracksContent = preg_replace(''/^return \\[/'', ''    \\''tracks\\'' => ['', $tracksContent);\n$tracksContent = rtrim($tracksContent);\n$tracksContent = rtrim($tracksContent, ''];'');\n$tracksContent .= \"\"    ],\\n\\n\"\";\n$output .= $tracksContent;\n\n// Add remaining sections\nforeach ([''gamemodes'', ''grid_orders'', ''session_modes'', ''weather_conditions'', ''frequencies'', ''ai_difficulties'', ''vehicle_damages'', ''car_classes'', ''cars''] as $section) {\n    $output .= \"\"    ''\"\" . $section . \"\"'' => \"\" . var_export($new[$section], true) . \"\",\\n\\n\"\";\n}\n\n$output .= \"\"];\\n\"\";\n\nfile_put_contents(''config/wreckfest.php'', $output);\necho ''Config updated successfully!'';\n\")",
      "Bash(php -r \"\n$tracks = include ''config/wreckfest.php'';\n$tracksList = $tracks[''tracks''] ?? [];\n\necho \"\"Track Locations and Variants:\\n\"\";\necho str_repeat(''='', 50) . \"\"\\n\"\";\n\nforeach ($tracksList as $locationKey => $location) {\n    echo \"\"\\n{$location[''name'']}:\\n\"\";\n    $variants = $location[''variants''] ?? [];\n    foreach ($variants as $variantId => $variant) {\n        $variantName = is_array($variant) ? $variant[''name''] : $variant;\n        $derby = is_array($variant) ? ($variant[''derby''] ? ''DERBY'' : ''RACE'') : ''RACE'';\n        echo \"\"  - $variantId => $variantName [$derby]\\n\"\";\n    }\n}\n\")",
      "Bash(php -l app/Filament/Pages/TrackBrowser.php)",
      "Bash(php -l app/Filament/Pages/ServerConfig.php)",
      "Bash(php -l app/Filament/Pages/TrackRotation.php)",
      "WebFetch(domain:pingperfect.com)",
      "Bash(git init)",
      "Bash(git check-ignore -v database/database.sqlite)",
      "Bash(git check-ignore -v config/*.backup config/*_new.php config/*_final.php config/*_converted.php)",
      "Bash(git add -A --dry-run)",
      "Bash(git add -A)"
    ],
    "deny": [],
    "ask": []
  }
}
